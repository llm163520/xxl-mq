<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.mq.admin.mapper.TopicMapper">

    <resultMap id="Topic" type="com.xxl.mq.admin.model.entity.Topic" >
        <result column="id" property="id" />
        <result column="appname" property="appname" />
        <result column="topic" property="topic" />
        <result column="desc" property="desc" />
        <result column="owner" property="owner" />
        <result column="alarm_email" property="alarmEmail" />
        <result column="status" property="status" />
        <result column="store_strategy" property="storeStrategy" />
        <result column="archive_strategy" property="archiveStrategy" />
        <result column="partition_strategy" property="partitionStrategy" />
        <result column="level" property="level" />
        <result column="retry_strategy" property="retryStrategy" />
        <result column="retry_count" property="retryCount" />
        <result column="retry_interval" property="retryInterval" />
        <result column="execution_timeout" property="executionTimeout" />
        <result column="add_time" property="addTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        t.`id`,
        t.`appname`,
        t.`topic`,
        t.`desc`,
        t.`owner`,
        t.`alarm_email`,
        t.`status`,
        t.`store_strategy`,
        t.`archive_strategy`,
        t.`partition_strategy`,
        t.`level`,
        t.`retry_strategy`,
        t.`retry_count`,
        t.`retry_interval`,
        t.`execution_timeout`,
        t.`add_time`,
        t.`update_time`
    </sql>

    <insert id="insert" parameterType="java.util.Map" >
        INSERT INTO xxl_mq_topic (
            `appname`,
            `topic`,
            `desc`,
            `owner`,
            `alarm_email`,
            `status`,
            `store_strategy`,
            `archive_strategy`,
            `partition_strategy`,
            `level`,
            `retry_strategy`,
            `retry_count`,
            `retry_interval`,
            `execution_timeout`,
            `add_time`,
            `update_time`
        )
        VALUES(
                  #{topic.appname} ,
                  #{topic.topic} ,
                  #{topic.desc} ,
                  #{topic.owner} ,
                  #{topic.alarmEmail} ,
                  #{topic.status} ,
                  #{topic.storeStrategy} ,
                  #{topic.archiveStrategy} ,
                  #{topic.partitionStrategy} ,
                  #{topic.level} ,
                  #{topic.retryStrategy} ,
                  #{topic.retryCount} ,
                  #{topic.retryInterval} ,
                  #{topic.executionTimeout} ,
                  NOW() ,
                  NOW()
              )
    </insert>

    <insert id="insertIgnoreRepeat" parameterType="java.util.Map" >
        INSERT IGNORE INTO xxl_mq_topic (
            `appname`,
            `topic`,
            `desc`,
            `owner`,
            `alarm_email`,
            `status`,
            `store_strategy`,
            `archive_strategy`,
            `partition_strategy`,
            `level`,
            `retry_strategy`,
            `retry_count`,
            `retry_interval`,
            `execution_timeout`,
            `add_time`,
            `update_time`
        )
        VALUES(
                  #{topic.appname} ,
                  #{topic.topic} ,
                  #{topic.desc} ,
                  #{topic.owner} ,
                  #{topic.alarmEmail} ,
                  #{topic.status} ,
                  #{topic.storeStrategy} ,
                  #{topic.archiveStrategy} ,
                  #{topic.partitionStrategy} ,
                  #{topic.level} ,
                  #{topic.retryStrategy} ,
                  #{topic.retryCount} ,
                  #{topic.retryInterval} ,
                  #{topic.executionTimeout} ,
                  NOW() ,
                  NOW()
              )
    </insert>

    <delete id="delete" parameterType="java.util.Map" >
        DELETE FROM xxl_mq_topic
        WHERE `id` in
        <foreach collection="ids" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
    </delete>

    <update id="update" parameterType="java.util.Map" >
        UPDATE xxl_mq_topic
        SET
            `desc` = #{topic.desc},
            `owner` = #{topic.owner},
            `alarm_email` = #{topic.alarmEmail},
            `store_strategy` = #{topic.storeStrategy},
            `archive_strategy` = #{topic.archiveStrategy},
            `partition_strategy` = #{topic.partitionStrategy},
            `level` = #{topic.level},
            `retry_strategy` = #{topic.retryStrategy},
            `retry_count` = #{topic.retryCount},
            `retry_interval` = #{topic.retryInterval},
            `execution_timeout` = #{topic.executionTimeout},
            `update_time` = NOW()
        WHERE `id` = #{topic.id}
    </update>

    <select id="load" parameterType="java.util.Map" resultMap="Topic">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_mq_topic AS t
        WHERE t.`id` = #{id}
    </select>

    <select id="loadByTopic" parameterType="java.util.Map" resultMap="Topic">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_mq_topic AS t
        WHERE t.`topic` = #{topic}
    </select>

    <select id="pageList" parameterType="java.util.Map" resultMap="Topic">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_mq_topic AS t
        WHERE t.`appname` = #{appname}
            AND t.`topic` LIKE CONCAT(CONCAT('%', #{topic}), '%')
        LIMIT #{offset}, #{pagesize}
    </select>

    <select id="pageListCount" parameterType="java.util.Map" resultType="int">
        SELECT count(1)
        FROM xxl_mq_topic AS t
        WHERE t.`appname` = #{appname}
          AND t.`topic` LIKE CONCAT(CONCAT('%', #{topic}), '%')
    </select>

    <update id="updateStatus" parameterType="java.util.Map" >
        UPDATE xxl_mq_topic
        SET
            `status` = #{status},
            `update_time` = NOW()
        WHERE `id` in
        <foreach collection="ids" item="item" open="(" close=")" separator="," >
            #{item}
        </foreach>
    </update>

    <select id="count" parameterType="java.util.Map" resultType="int">
        SELECT count(1)
        FROM xxl_mq_topic AS t
    </select>

    <select id="queryByStatus" parameterType="java.util.Map" resultMap="Topic">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_mq_topic AS t
        WHERE t.`status` = #{status}
    </select>

</mapper>
